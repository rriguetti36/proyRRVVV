<main class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <h1 class="h4 mb-4 text-primary fw-bold">
                üìÇ Simulador de estudios de Cotizaci√≥n
            </h1>
            <!-- Wizard -->
            <div class="card shadow">
                <div class="card-body">
                    <div id="wizard">
                        <!-- Paso 1: Asegurado -->
                        <div class="wizard-step active" id="step1">
                            <h5>Datos del Asegurado</h5>
                            <hr>
                            <form id="formAsegurado">
                                <div class="row">
                                    <!-- Tipo Documento -->
                                    <div class="col-md-2 mb-3">
                                        <label for="tipoDoc">Tipo Documento</label>
                                        <select class="form-control" id="aseTipoDoc" name="aseTipoDoc">
                                            <option value="">-- Seleccione --</option>
                                            <% tipodoc.forEach(function(doc) { %>
                                                <option value="<%= doc.v_cod %>">
                                                    <%= doc.v_nombre %>
                                                </option>
                                                <% }) %>
                                        </select>
                                        <!-- <select class="form-control" id="tipoDoc" required>
                                            <option value="">-- Seleccione --</option>
                                            <option value="DNI">DNI</option>
                                            <option value="CE">Carn√© Extranjer√≠a</option>
                                            <option value="PAS">Pasaporte</option>
                                        </select> -->
                                    </div>

                                    <!-- N√∫mero Documento -->
                                    <div class="col-md-2 mb-3">
                                        <label for="numDoc">N√∫m. Documento</label>
                                        <input type="text" class="form-control" id="aseNumDoc" required>
                                    </div>

                                    <!-- CUSPP -->
                                    <div class="col-md-2 mb-3">
                                        <label for="cuspp">CUSPP</label>
                                        <input type="text" class="form-control" id="aseCuspp">
                                    </div>
                                </div>

                                <div class="row">
                                    <!-- Nombres -->
                                    <div class="col-md-4 mb-3">
                                        <label for="nombres">Nombres</label>
                                        <input type="text" class="form-control" id="aseNombres">
                                    </div>

                                    <!-- Apellido Paterno -->
                                    <div class="col-md-4 mb-3">
                                        <label for="apellidoPat">Apellido Paterno</label>
                                        <input type="text" class="form-control" id="aseApellidoPat">
                                    </div>

                                    <!-- Apellido Materno -->
                                    <div class="col-md-4 mb-3">
                                        <label for="apellidoMat">Apellido Materno</label>
                                        <input type="text" class="form-control" id="aseApellidoMat">
                                    </div>
                                </div>

                                <div class="row">
                                    <!-- Departamento -->
                                    <div class="col-md-2 mb-3">
                                        <label for="departamento">Departamento</label>
                                        <select class="form-control" id="aseDepartamento">
                                            <option value="">-- Seleccione --</option>
                                        </select>
                                    </div>

                                    <!-- Provincia -->
                                    <div class="col-md-2 mb-3">
                                        <label for="provincia">Provincia</label>
                                        <select class="form-control" id="aseProvincia">
                                            <option value="">-- Seleccione --</option>
                                        </select>
                                    </div>

                                    <!-- Distrito -->
                                    <div class="col-md-2 mb-3">
                                        <label for="distrito">Distrito</label>
                                        <select class="form-control" id="aseDistrito">
                                            <option value="">-- Seleccione --</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="row">
                                    <!-- Sexo -->
                                    <div class="col-md-2 mb-3">
                                        <label for="sexo">Sexo</label>
                                        <select class="form-control" id="aseSexo" name="aseSexo">
                                            <option value="">-- Seleccione --</option>
                                            <% tiposex.forEach(function(doc) { %>
                                                <option value="<%= doc.v_cod %>">
                                                    <%= doc.v_nombre %>
                                                </option>
                                                <% }) %>
                                        </select>
                                        <!-- <select class="form-control" id="sexo">
                                            <option value="">-- Seleccione --</option>
                                            <option value="M">Masculino</option>
                                            <option value="F">Femenino</option>
                                        </select> -->
                                    </div>

                                    <!-- Fecha Nacimiento -->
                                    <div class="col-md-2 mb-3">
                                        <label for="fechaNac">Fecha Nacimiento</label>
                                        <input type="date" class="form-control" id="aseFechaNac">
                                    </div>

                                    <!-- AFP -->
                                    <div class="col-md-2 mb-3">
                                        <label for="afp">AFP</label>
                                        <select class="form-control" id="aseAfp" name="aseAfp">
                                            <option value="">-- Seleccione --</option>
                                            <% tipoAfp.forEach(function(doc) { %>
                                                <option value="<%= doc.n_valor %>">
                                                    <%= doc.v_nombre %>
                                                </option>
                                                <% }) %>
                                        </select>
                                        <!-- <select class="form-control" id="afp">
                                            <option value="">-- Seleccione --</option>
                                            <option value="PRIMA">PRIMA</option>
                                            <option value="INTEGRA">INTEGRA</option>
                                            <option value="HABITAT">HABITAT</option>
                                        </select> -->
                                    </div>

                                    <!-- Tipo de Pensi√≥n -->
                                    <div class="col-md-2 mb-3">
                                        <label for="pension">Tipo de Pensi√≥n</label>
                                        <!-- <select class="form-control" id="pension" name="pension">
                                            <option value="">-- Seleccione --</option>
                                            <% tipoPen.forEach(function(doc) { %>
                                                <option value="<%= doc.v_cod %>">
                                                    <%= doc.v_nombre %>
                                                </option>
                                                <% }) %>
                                        </select> -->
                                        <select class="form-control" id="asePension" name="asePension">
                                            <option value="">-- Seleccione --</option>
                                            <option value="J">JUBILACION</option>
                                            <option value="I">INVALIDEZ</option>
                                            <option value="S">SOBREVIVECNIA</option>
                                        </select>
                                    </div>

                                    <!-- Tipo de invalidez -->
                                    <div class="col-md-2 mb-3">
                                        <label for="pension">Tipo de Invalidez</label>
                                        <select class="form-control" id="aseInvalidez" name="aseInvalidez">
                                            <option value="">-- Seleccione --</option>
                                            <% tipoInv.forEach(function(doc) { %>
                                                <option value="<%= doc.v_cod %>">
                                                    <%= doc.v_nombre %>
                                                </option>
                                                <% }) %>
                                        </select>
                                    </div>

                                    <!-- CIC -->
                                    <div class="col-md-2 mb-3">
                                        <label for="cic">CIC</label>
                                        <input type="text" class="form-control" id="aseCic">
                                    </div>
                                </div>



                                <div class="row">
                                    <!-- Fecha Devengue -->
                                    <div class="col-md-2 mb-3">
                                        <label for="fechaDev">Fecha Devengue</label>
                                        <input type="date" class="form-control" id="aseFechaDev">
                                    </div>

                                    <!-- Fecha Devengue Solicitud -->
                                    <div class="col-md-2 mb-3">
                                        <label for="fechaDevSol">Devengue Solicitud</label>
                                        <input type="date" class="form-control" id="aseFechaDevSol">
                                    </div>

                                    <!-- Gasto Sepelio -->
                                    <div class="col-md-2 mb-3">
                                        <label for="gastoSep">Gasto Sepelio</label>
                                        <input type="text" class="form-control" id="gastoSep" value="<%= gasSep %>"
                                            disabled>
                                    </div>

                                    <!-- Tipo de Cambio -->
                                    <div class="col-md-2 mb-3">
                                        <label for="tipoCambio">Tipo Cambio</label>
                                        <input type="text" class="form-control" id="tipoCambio" value="<%= tipCam %>"
                                            disabled>
                                    </div>
                                </div>
                                <input type="hidden" id="GasEmi" name="GasEmi" value="<%= Gastos.Gastosemi %>">
                                <input type="hidden" id="GasAdm" name="GasAdm" value="<%= Gastos.Gastosmant %>">
                                <input type="hidden" id="GasImp" name="GasImp" value="<%= Gastos.Impuestos %>">

                            </form>
                            <button class="btn btn-primary float-end nextBtn">Siguiente</button>
                        </div>

                        <!-- Paso 2: Beneficiarios -->
                        <div class="wizard-step d-none" id="step2">
                            <h5>Registro de Beneficiarios</h5>
                            <hr>

                            <!-- Bot√≥n para abrir modal -->
                            <button class="btn btn-sm btn-primary mb-3" data-bs-toggle="modal"
                                data-bs-target="#modalBeneficiario">
                                + Agregar Beneficiario
                            </button>

                            <!-- Tabla de beneficiarios -->
                            <div class="table-responsive" style="max-height: 350px; overflow-y: auto;">
                                <table class="table table-bordered table-hover align-middle text-center"
                                    id="tablaBeneficiarios">
                                    <thead class="table-light sticky-header">
                                        <tr>
                                            <th>#</th>
                                            <th>Parentesco</th>
                                            <th>Sexo</th>
                                            <th>Fecha Nac.</th>
                                            <th>Invalidez</th>
                                            <th>Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Aqu√≠ se insertar√°n din√°micamente los beneficiarios -->
                                    </tbody>
                                </table>
                            </div>


                            <button class="btn btn-secondary prevBtn">Anterior</button>
                            <button class="btn btn-primary float-end nextBtn">Siguiente</button>
                        </div>

                        <!-- Paso 3: Modalidades -->
                        <div class="wizard-step d-none" id="step3">
                            <h5>Modalidades de Cotizaci√≥n</h5>
                            <hr>
                            <button class="btn btn-sm btn-primary mb-3" data-bs-toggle="modal"
                                data-bs-target="#modalAgregarModalidad">
                                + Agregar Modalidad
                            </button>
                            <button class="btn btn-sm btn-primary mb-3" id="btnModalidasDefsinPG">
                                + Agregar Pack sin PG
                            </button>
                            <button class="btn btn-sm btn-primary mb-3" id="btnModalidasDefconPG">
                                + Agregar Pack con PG
                            </button>
                            <button class="btn btn-sm btn-primary mb-3 float-end" id="btnCalcular">Calcular</button>
                            <div class="table-responsive" style="max-height: 350px; overflow-y: auto;">
                                <table class="table table-bordered table-hover align-middle text-center"
                                    id="tablaModalidades">
                                    <thead class="table-light sticky-header">
                                        <tr>
                                            <th>#</th>
                                            <!-- <th>Tipo de Renta</th> -->
                                            <th>Moneda</th>
                                            <th>Diferido</th>
                                            <th>Garantizado</th>
                                            <th>Gratificaci√≥n</th>
                                            <th>Primer Tramo</th>
                                            <th>Segundo Tramo</th>
                                            <th>% Renta AFP</th>
                                            <th>Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Se insertan din√°micamente -->
                                    </tbody>
                                </table>
                            </div>
                            <br>

                            <br>
                            <br>
                            <h5>Resultados</h5>
                            <hr>
                            <div class="table-responsive" style="display: none">
                                <table class="table table-bordered" id="tablaResultados">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>ID Mod</th>
                                            <!-- <th>Pension Referencia</th> -->
                                            <th>Pension AFP</th>
                                            <th>Pension CIA</th>
                                            <th>Prima AFP</th>
                                            <th>Prima CIA</th>
                                            <th>Tasa VTA</th>
                                            <!-- <th>Tasa TCI</th>
                                            <th>Tasa TCE</th>
                                            <th>Tasa TIR</th>
                                            <th>Perdida</th> -->
                                            <th>Pensiones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Aqu√≠ se llenar√° din√°micamente -->
                                    </tbody>
                                </table>
                            </div>
                            <div class="row" id="cardContainer"></div>
                            <button class="btn btn-secondary prevBtn">Anterior</button>
                            <button class="btn btn-secondary float-end" id="btnGuardar">Guardar y Enviar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Modal Beneficiario -->
<div class="modal fade" id="modalBeneficiario" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Registro de Beneficiario</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="formBeneficiario" class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">Tipo Documento</label>
                        <select class="form-control" id="benTipoDoc" name="benTipoDoc">
                            <option value="">-- Seleccione --</option>
                            <% tipodoc.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                        <!-- <select class="form-control" id="benTipoDoc">
                            <option value="">-- Seleccione --</option>
                            <option value="DNI">DNI</option>
                            <option value="CE">Carn√© Extranjer√≠a</option>
                        </select> -->
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">N√∫m. Documento</label>
                        <input type="text" class="form-control" id="benNumDoc">
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Parentesco</label>
                        <select class="form-control" id="benParentesco" name="benParentesco">
                            <option value="">-- Seleccione --</option>
                            <% tipoPar.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                        <!-- <select class="form-control" id="benParentesco">
                            <option value="">-- Seleccione --</option>
                            <option value="conyuge">C√≥nyuge</option>
                            <option value="hijo">Hijo</option>
                        </select> -->
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Fecha Nacimiento</label>
                        <input type="date" class="form-control" id="benFechaNac">
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Sexo</label>
                        <select class="form-control" id="benSexo" name="benSexo">
                            <option value="">-- Seleccione --</option>
                            <% tiposex.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                        <!-- <select class="form-control" id="benSexo">
                            <option value="">-- Seleccione --</option>
                            <option value="M">Masculino</option>
                            <option value="F">Femenino</option>
                        </select> -->
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Situaci√≥n Invalidez</label>
                        <select class="form-control" id="benInvalidez">
                            <option value="">-- Seleccione --</option>
                            <option value="1">Sano</option>
                            <option value="2">Invalido</option>
                        </select>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-success" id="btnGuardarBeneficiario">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para agregar modalidad -->
<div class="modal fade" id="modalAgregarModalidad" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Agregar Modalidad</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="formModalidad" class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">Moneda</label>
                        <select class="form-control" id="moneda" name="moneda">
                            <option value="">-- Seleccione --</option>
                            <% tipoMon.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                        <!--  <select id="moneda" class="form-control" required>
                            <option value="">-- Seleccione --</option>
                            <option value="PEN">Soles</option>
                            <option value="USD">D√≥lares</option>
                        </select> -->
                    </div>
                    <!-- 
                    <div class="col-md-4">
                        <label class="form-label">Modalidad</label>
                        <select class="form-control" id="modalidad" name="modalidad">
                            <option value="">-- Seleccione --</option>
                            <% tipoMod.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                    </div> -->

                    <!-- <div class="col-md-8">
                        <label class="form-label">Tipo de Renta</label>
                        <select class="form-control" id="tipoRenta" name="tipoRenta">
                            <option value="">-- Seleccione --</option>
                            <% tipoRen.forEach(function(doc) { %>
                                <option value="<%= doc.v_cod %>">
                                    <%= doc.v_nombre %>
                                </option>
                                <% }) %>
                        </select>
                    </div> -->

                    <div class="col-md-4">
                        <label class="form-label">Periodo Diferido</label>
                        <select id="periodoDiferido" name="periodoDiferido" class="form-control">
                            <option value="">-- Seleccione --</option>
                            <option value="1">1 A√±os</option>
                            <option value="2">2 A√±os</option>
                            <option value="3">3 A√±os</option>
                            <option value="4">4 A√±os</option>
                            <option value="5">5 A√±os</option>
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Periodo Garantizado</label>
                        <select id="periodoGarantizado" name="periodoGarantizado" class="form-control">
                            <option value="">-- Seleccione --</option>
                            <option value="10">10 a√±os</option>
                            <option value="15">15 a√±os</option>
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Gratificaci√≥n</label>
                        <select id="gratificacion" class="form-control">
                            <option value="">-- Seleccione --</option>
                            <option value="S">S√≠</option>
                            <option value="N">No</option>
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Primer Tramo</label>
                        <select id="primerTramo" class="form-control">
                            <option value="">-- Seleccione --</option>
                            <option value="1">1 a√±os</option>
                            <option value="2">2 a√±os</option>
                            <option value="3">3 a√±os</option>
                            <option value="4">4 a√±os</option>
                            <option value="5">5 a√±os</option>
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label class="form-label">Segundo Tramo</label>
                        <select id="segundoTramo" class="form-control">
                            <option value="">-- Seleccione --</option>
                            <option value="50">50 %</option>
                            <option value="100">100 %</option>
                            <option value="200">200 %</option>
                        </select>
                    </div>

                    <!-- <div class="col-md-4">
                        <label class="form-label">% Comisi√≥n AFP</label>
                        <input type="text" id="comisionAFP" class="form-control" placeholder="%" disabled>
                    </div> -->
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="btnGuardarModalidad" class="btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Loader oculto por defecto -->
<div id="loader" style="display:none; position: fixed; top:0; left:0; width:100%; height:100%; 
     background: rgba(255,255,255,0.7); z-index:9999; text-align:center; padding-top:20%;">
    <div class="spinner-border text-primary" role="status" style="width: 5rem; height: 5rem;">
        <span class="visually-hidden">Cargando...</span>
    </div>
    <p class="mt-3">Procesando tu solicitud, por favor espera...</p>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Navegaci√≥n del wizard
    document.querySelectorAll(".nextBtn").forEach(btn => {
        btn.addEventListener("click", function () {
            let currentStep = this.closest(".wizard-step");
            let nextStep = currentStep.nextElementSibling;
            if (nextStep) {
                currentStep.classList.add("d-none");
                nextStep.classList.remove("d-none");
            }
        });
    });

    document.querySelectorAll(".prevBtn").forEach(btn => {
        btn.addEventListener("click", function () {
            let currentStep = this.closest(".wizard-step");
            let prevStep = currentStep.previousElementSibling;
            if (prevStep) {
                currentStep.classList.add("d-none");
                prevStep.classList.remove("d-none");
            }
        });
    });

    let beneficiarios = [];
    let countBeneficiario = 1;
    let modalidades = [];
    let countModalidad = 0;

    let beneficiariosData = [];
    let modalidadesData = [];
    let resultadosModalidadData = [];

    // Guardar Beneficiarios
    document.getElementById("btnGuardarBeneficiario").addEventListener("click", () => {
        countBeneficiario++;
        const data = {
            IdBeneficiario: countBeneficiario,
            Parentesco: parseFloat(document.getElementById("benParentesco").value),
            Genero: parseFloat(document.getElementById("benSexo").value),
            FechaNacimiento: document.getElementById("benFechaNac").value,
            TipoInvalidez: parseFloat(document.getElementById("benInvalidez").value)
        };
        //muestra las descripciones
        let selectPar = document.getElementById("benParentesco");
        data.DescriTipoPar = selectPar.options[selectPar.selectedIndex].text;
        let selectSex = document.getElementById("benSexo");
        data.DescriTipoSex = selectSex.options[selectSex.selectedIndex].text;
        let selectInv = document.getElementById("benInvalidez");
        data.DescriTipoInv = selectInv.options[selectInv.selectedIndex].text;
        beneficiarios.push(data);

        if (!data.Parentesco || !data.Genero || !data.FechaNacimiento || !data.TipoInvalidez) {
            alert("Complete los campos obligatorios.");
            return;
        }

        //Crea data para guardar
        const dataBen = {
            id_orden: countBeneficiario,
            id_tipodociden: 0,
            num_dociden: "",
            des_nombre: "",
            des_segundonombre: "",
            des_apepaterno: "",
            des_apematerno: "",
            id_parentesco: parseFloat(document.getElementById("benParentesco").value),
            id_sexo: parseFloat(document.getElementById("benSexo").value),
            fec_nacimiento: document.getElementById("benFechaNac").value,
            id_ivalido: parseFloat(document.getElementById("benInvalidez").value),
            val_pension: 0,
            mto_pension: 0,
        }
        beneficiariosData.push(dataBen);
       
        renderTablaBeneficiarios();
        document.getElementById("formBeneficiario").reset();
        bootstrap.Modal.getInstance(document.getElementById("modalBeneficiario")).hide();
    });

    function renderTablaBeneficiarios() {
        const tbody = document.querySelector("#tablaBeneficiarios tbody");
        tbody.innerHTML = "";
        beneficiarios.forEach((b, index) => {
            tbody.innerHTML += `
        <tr>
            <td>${index + 1}</td>
            <td>${b.DescriTipoPar}</td>
            <td>${b.DescriTipoSex}</td>
            <td>${b.FechaNacimiento}</td>
            <td>${b.DescriTipoInv}</td>
            <td>
                <button class="btn btn-danger btn-sm" onclick="eliminarbeneficiarios(${b.IdBeneficiario})">
                <i class="fa fa-trash"></i>
                </button>
            </td>
        </tr>
      `;
        });
    }

    function eliminarbeneficiarios(id) {
        beneficiarios = beneficiarios.filter(m => m.IdBeneficiario !== id);
        renderTablaBeneficiarios();
    }

    // Guardar Modalidad
    document.getElementById("btnGuardarModalidad").addEventListener("click", async () => {
        countModalidad++;
        const data = {
            IdModalidad: countModalidad,
            Moneda: parseFloat(document.getElementById("moneda").value),
            PeriodoDiferido: parseFloat(document.getElementById("periodoDiferido").value || 0),
            PeriodoGarantizado: parseFloat(document.getElementById("periodoGarantizado").value || 0),
            Gratificacion: document.getElementById("gratificacion").value,
            PrimerTramo: parseFloat(document.getElementById("primerTramo").value || 0),
            SegundoTramo: parseFloat(document.getElementById("segundoTramo").value || 0),
        };
        //trae las tasas y topes de cada modalidad
        const MontoCIC = parseFloat(document.getElementById("aseCic").value || 0);
        const TipoPension = document.getElementById("asePension").value;
        const IdAfp = document.getElementById("aseAfp").value;
        const body = {
            moneda: data.moneda,
            montoCIC: MontoCIC,
            prestacion: TipoPension,
            afp: IdAfp
        };
        const response = await fetch("http://localhost:3000/cotizador/api/tasasInd", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(body)
        });
        const result = await response.json();
        data.TasaRentaAFP = parseFloat(result.prcafp || 0);
        data.RentaTemp = 50;
        data.tasaanclaje = parseFloat(result.valtac || 0);
        data.tasaventaprom = parseFloat(result.valpro || 0);
        data.tasaventa = parseFloat(result.valvta || 0);
        data.tasatirtope = parseFloat(result.valtir || 0);
        data.tasaperdidatope = parseFloat(result.valper || 0);
        data.comision = parseFloat(result.comision || 0);

        //muestra las descripciones
        let selectMon = document.getElementById("moneda");
        data.DescriTipoMoneda = selectMon.options[selectMon.selectedIndex].text;
        modalidades.push(data);

        if (!data.Moneda) {
            alert("Complete los campos obligatorios.");
            return;
        }

        const dataMod = {
            id_correlativo: countModalidad,
            id_moneda: parseFloat(document.getElementById("moneda").value),
            num_mesdif: parseFloat(document.getElementById("periodoDiferido").value || 0),
            num_mesgar: parseFloat(document.getElementById("periodoGarantizado").value || 0),
            ind_dergra: document.getElementById("gratificacion").value,
            num_mesesc: parseFloat(document.getElementById("primerTramo").value || 0),
            val_rentaesc: parseFloat(document.getElementById("segundoTramo").value || 0),
        };
        modalidadesData.push(dataMod);

        //console.log(modalidadesData);
        renderTablaModalidades();
        document.getElementById("formModalidad").reset();
        bootstrap.Modal.getInstance(document.getElementById("modalAgregarModalidad")).hide();
    });

    function renderTablaModalidades() {
        const tbody = document.querySelector("#tablaModalidades tbody");
        tbody.innerHTML = "";
        modalidades.forEach((m, index) => {
            tbody.innerHTML += `
        <tr>
          <td>${index + 1}</td>
          <td>${m.DescriTipoMoneda}</td>
          <td>${m.PeriodoDiferido}</td>
          <td>${m.PeriodoGarantizado}</td>
          <td>${m.Gratificacion}</td>
          <td>${m.PrimerTramo}</td>
          <td>${m.SegundoTramo}</td>
          <td>${m.TasaRentaAFP}%</td>
          <td>
            <button class="btn btn-danger btn-sm" onclick="eliminarModalidad(${m.IdModalidad})">
              <i class="fa fa-trash"></i>
            </button>
          </td>
        </tr>
      `;
        });
    }

    function eliminarModalidad(id) {
        modalidades = modalidades.filter(m => m.IdModalidad !== id);
        renderTablaModalidades();
    }

    document.getElementById("btnCalcular").addEventListener("click", async () => {
        const loader = document.getElementById("loader");
        loader.style.display = "block"; // üëà Mostrar loader
        await new Promise(r => setTimeout(r, 50));
        // --- Datos del asegurado (ejemplo: tomados de inputs) ---
        const asegurado = {
            IdBeneficiario: 1,
            TipoInvalidez: parseFloat(document.getElementById("aseInvalidez").value),
            FechaNacimiento: document.getElementById("aseFechaNac").value,
            Genero: parseFloat(document.getElementById("aseSexo").value),
            ComisionAFP: parseFloat(document.getElementById("aseAfp").value),
            TipoPension: document.getElementById("asePension").value,
            FechaDevengue: document.getElementById("aseFechaDev").value,
            FechaDevengueSolicitud: document.getElementById("aseFechaDevSol").value
        };

        // --- Datos generales ---
        const payload = {
            IdoperacionSbs: 0,
            Cliente: "01",
            TipoCambio: parseFloat(document.getElementById("tipoCambio").value || 0),
            GastoSepelio: parseFloat(document.getElementById("gastoSep").value || 0),
            MontoCIC: parseFloat(document.getElementById("aseCic").value || 0),
            Licencia: "",
            Gastos: {
                Gastosmant: parseFloat(document.getElementById("GasAdm").value || 0),
                Gastosemi: parseFloat(document.getElementById("GasEmi").value || 0),
                Porcentajedeuda: 0,
                Impuestos: parseFloat(document.getElementById("GasImp").value || 0)
            },
            Asegurado: asegurado,
            Beneficiario: beneficiarios, // tu array construido en el paso 2
            Modalidad: modalidades       // tu array construido en el paso 3
        };

        console.log("üì§ Enviando JSON:", payload);

        calcularCotizacionOptCard(payload);
    });

    document.addEventListener('DOMContentLoaded', () => {

        const departamento = document.getElementById('aseDepartamento');
        const provincia = document.getElementById('aseProvincia');
        const distrito = document.getElementById('aseDistrito');

        // 1. Cargar regiones al inicio
        fetch('/cotizador/api/regiones')
            .then(res => res.json())
            .then(data => {
                data.forEach(r => {
                    const option = document.createElement('option');
                    option.value = r.id;
                    option.textContent = r.v_nombre;
                    departamento.appendChild(option);
                });
            });

        // 2. Al cambiar regi√≥n -> provincias
        departamento.addEventListener('change', () => {
            const idRegion = departamento.value;
            provincia.innerHTML = '<option value="">-- Seleccione --</option>';
            distrito.innerHTML = '<option value="">-- Seleccione --</option>';
            if (!idRegion) return;

            fetch(`/cotizador/api/provincias/${idRegion}`)
                .then(res => res.json())
                .then(data => {
                    data.forEach(p => {
                        const option = document.createElement('option');
                        option.value = p.id;
                        option.textContent = p.v_nombre;
                        provincia.appendChild(option);
                    });
                });
        });

        // 3. Al cambiar provincia -> distritos
        provincia.addEventListener('change', () => {
            const idProvincia = provincia.value;
            distrito.innerHTML = '<option value="">-- Seleccione --</option>';
            if (!idProvincia) return;

            fetch(`/cotizador/api/distritos/${idProvincia}`)
                .then(res => res.json())
                .then(data => {
                    data.forEach(d => {
                        const option = document.createElement('option');
                        option.value = d.id;
                        option.textContent = d.v_nombre;
                        distrito.appendChild(option);
                    });
                });
        });

        // 4. Al elegir un distrito -> autocompletar provincia y regi√≥n
        distrito.addEventListener('change', () => {
            const idDistrito = distrito.value;
            if (!idDistrito) return;

            fetch(`/cotizador/api/distrito-info/${idDistrito}`)
                .then(res => res.json())
                .then(info => {
                    provincia.value = info.idProvincia;
                    departamento.value = info.idRegion;
                });
        });

    });

    async function calcularCotizacionOptTab(payload) {
        try {
            // 1Ô∏è‚É£ Obtener token
            const tokenRes = await fetch("http://localhost:3000/auth/token", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ clientId: "cliente1", clientSecret: "secret123" })
            });

            const tokenData = await tokenRes.json();

            if (!tokenRes.ok) {
                throw new Error(tokenData.error || "Error al obtener el token");
            }

            const token = tokenData.token;

            // 2Ô∏è‚É£ Llamar al endpoint de c√°lculo
            const calcRes = await fetch("http://localhost:3000/rutinarv/calcular", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`
                },
                body: JSON.stringify(payload)
            });

            const calcData = await calcRes.json();

            if (!calcRes.ok) {
                throw new Error(calcData.error || "Error en el c√°lculo de la cotizaci√≥n");
            }

            console.log("‚úÖ Respuesta backend:", calcData);

            // 3Ô∏è‚É£ Mostrar √©xito
            Swal.fire({
                title: "¬°√âxito!",
                text: "Cotizaci√≥n calculada correctamente",
                icon: "success",
                confirmButtonText: "Aceptar",
                confirmButtonColor: "#3085d6"
            });

            // 4Ô∏è‚É£ Renderizar resultados en tabla
            const tbody = document.querySelector("#tablaResultados tbody");
            tbody.innerHTML = ""; // Limpiamos tabla previa

            calcData.forEach(item => {
                const fila = document.createElement("tr");

                const resultadosPenHTML = Array.isArray(item.resultadospen)
                    ? item.resultadospen.map(rp => `
                    <tr>
                        <td>${rp.id}</td>
                        <td>${rp.prc}</td>
                        <td>${formato(rp.pension)}</td>
                    </tr>
                `).join("")
                    : `<tr><td colspan="3">No hay datos</td></tr>`;

                fila.innerHTML = `
                <td>${item.idmod ?? ""}</td>
                <td>${formato(item.penafp) ?? ""}</td>
                <td>${formato(item.pencia) ?? ""}</td>
                <td>${formato(item.primaafp) ?? ""}</td>
                <td>${formato(item.primacia) ?? ""}</td>
                <td>${formato(item.tasavta) ?? ""}</td>
                <td>
                    <table class="table table-sm table-borderless mb-0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>%</th>
                                <th>Pensi√≥n</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${resultadosPenHTML}
                        </tbody>
                    </table>
                </td>
            `;

                tbody.appendChild(fila);
            });

        } catch (err) {
            console.error("‚ùå Error:", err.message);

            Swal.fire({
                title: "Error",
                text: err.message,
                icon: "error",
                confirmButtonText: "Cerrar",
                confirmButtonColor: "#d33"
            });
        } finally {
            loader.style.display = "none"; // üëà Ocultar loader siempre
        }
    }

    async function calcularCotizacionOptCard(payload) {
        try {
            // 1Ô∏è‚É£ Obtener token
            const tokenRes = await fetch("http://localhost:3000/auth/token", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ clientId: "cliente1", clientSecret: "secret123" })
            });

            const tokenData = await tokenRes.json();

            if (!tokenRes.ok) {
                throw new Error(tokenData.error || "Error al obtener el token");
            }

            const token = tokenData.token;

            // 2Ô∏è‚É£ Llamar al endpoint de c√°lculo
            const calcRes = await fetch("http://localhost:3000/rutinarv/calcular", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`
                },
                body: JSON.stringify(payload)
            });

            const calcData = await calcRes.json();

            if (!calcRes.ok) {
                throw new Error(calcData.error || "Error en el c√°lculo de la cotizaci√≥n");
            }

            console.log("‚úÖ Respuesta backend:", calcData);

            // 3Ô∏è‚É£ Mostrar √©xito
            Swal.fire({
                title: "¬°√âxito!",
                text: "Cotizaci√≥n calculada correctamente",
                icon: "success",
                confirmButtonText: "Aceptar",
                confirmButtonColor: "#3085d6"
            });

            const container = document.getElementById("cardContainer");
            container.innerHTML = ""; // limpiar contenido previo

            calcData.forEach(item => {
                // construimos los "chips" para resultadospen
                const resultadosPenHTML = Array.isArray(item.resultadospen)
                    ? item.resultadospen.map(rp => `
            <span class="badge bg-secondary me-1 mb-1">
                <strong>${rp.id}</strong>: ${rp.prc}% ‚Üí ${formato(rp.pension)}
            </span>
        `).join("")
                    : `<span class="text-muted">No hay datos</span>`;

                // creamos el card
                const card = document.createElement("div");
                card.classList.add("col-md-3", "mb-4");

                card.innerHTML = `
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <h5 class="card-title text-primary mb-3">
                    <i class="bi bi-graph-up"></i> Modalidad: ${item.idmod ?? "N/A"}
                </h5>

                <ul class="list-group list-group-flush small mb-3">
                    <li class="list-group-item">
                        <strong>Pensi√≥n AFP:</strong> ${formato(item.penafp) ?? ""}
                    </li>
                    <li class="list-group-item">
                        <strong>Pensi√≥n CIA:</strong> ${formato(item.pencia) ?? ""}
                    </li>
                    <li class="list-group-item">
                        <strong>Prima AFP:</strong> ${formato(item.primaafp) ?? ""}
                    </li>
                    <li class="list-group-item">
                        <strong>Prima CIA:</strong> ${formato(item.primacia) ?? ""}
                    </li>
                    <li class="list-group-item">
                        <strong>Tasa Venta:</strong> ${formato(item.tasavta) ?? ""}
                    </li>
                </ul>

                <div>
                    <h6 class="fw-bold text-muted mb-2">Pensiones:</h6>
                    ${resultadosPenHTML}
                </div>
            </div>
        </div>
    `;

                container.appendChild(card);

                //gurda tabla temporal de reultados para ser enviado al Backend
                const resultadosMod = {
                    id_correlativo: item.idmod,
                    mto_pensionref: formato(item.penref),
                    mto_pensionafp: formato(item.penafp),
                    mto_pension: formato(item.pencia),
                    mto_primaafp: formato(item.primaafp),
                    mto_primacia: formato(item.primacia),
                    val_tasavta: formato(item.tasavta),
                    val_tasaTci: formato(item.tasaTci),
                    val_tasaTce: formato(item.tasaTce),
                    val_tasaTir: formato(item.tasaTir),
                    val_perdida: formato(item.perdida)
                }
                resultadosModalidadData.push(resultadosMod)
            });

        } catch (err) {
            console.error("‚ùå Error:", err.message);

            Swal.fire({
                title: "Error",
                text: err.message,
                icon: "error",
                confirmButtonText: "Cerrar",
                confirmButtonColor: "#d33"
            });
        } finally {
            loader.style.display = "none"; // üëà Ocultar loader siempre
        }
    }

    function formato(num, decimales = 2) {
        return (typeof num === "number" && !isNaN(num))
            ? num.toFixed(decimales)
            : "";
    }

    async function agregaModalidadesPack(mon, dif, gar, gra, pri, seg) {
        countModalidad++;
        const data = {
            IdModalidad: countModalidad,
            Moneda: mon,
            PeriodoDiferido: dif,
            PeriodoGarantizado: gar,
            Gratificacion: gra,
            PrimerTramo: pri,
            SegundoTramo: seg,
        };


        //trae las tasas y topes de cada modalidad
        const MontoCIC = parseFloat(document.getElementById("aseCic").value || 0);
        const TipoPension = document.getElementById("asePension").value;
        const IdAfp = document.getElementById("aseAfp").value;
        const body = {
            moneda: data.moneda,
            montoCIC: MontoCIC,
            prestacion: TipoPension,
            afp: IdAfp
        };
        const response = await fetch("http://localhost:3000/cotizador/api/tasasInd", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(body)
        });
        const result = await response.json();

        data.TasaRentaAFP = parseFloat(result.prcafp || 0);
        data.RentaTemp = 50;
        data.tasaanclaje = parseFloat(result.valtac || 0);
        data.tasaventaprom = parseFloat(result.valpro || 0);
        data.tasaventa = parseFloat(result.valvta || 0);
        data.tasatirtope = parseFloat(result.valtir || 0);
        data.tasaperdidatope = parseFloat(result.valper || 0);
        data.comision = parseFloat(result.comision || 0);

        //muestra las descripciones
        let selectMon = document.getElementById("moneda");
        data.DescriTipoMoneda = selectMon.options[mon].text;

        modalidades.push(data);
        console.log(modalidades);
        renderTablaModalidades();
    }

    document.getElementById("btnModalidasDefsinPG").addEventListener("click", async () => {
        agregaModalidadesPack(2, 0, 0, "N", 0, 0);
        agregaModalidadesPack(2, 1, 0, "N", 0, 0);
        agregaModalidadesPack(2, 3, 0, "N", 0, 0);
        agregaModalidadesPack(2, 5, 0, "N", 0, 0);
    });

    document.getElementById("btnModalidasDefconPG").addEventListener("click", async () => {
        agregaModalidadesPack(2, 0, 10, "N", 0, 0);
        agregaModalidadesPack(2, 1, 10, "N", 0, 0);
        agregaModalidadesPack(2, 3, 10, "N", 0, 0);
        agregaModalidadesPack(2, 5, 10, "N", 0, 0);
        agregaModalidadesPack(2, 0, 15, "N", 0, 0);
        agregaModalidadesPack(2, 1, 15, "N", 0, 0);
        agregaModalidadesPack(2, 3, 15, "N", 0, 0);
        agregaModalidadesPack(2, 5, 15, "N", 0, 0);
    });

    document.getElementById("btnGuardar").addEventListener("click", async () => {
        guardarEstudio();
    });

    async function guardarEstudio() {
        const loader = document.getElementById("loader");
        loader.style.display = "block"; // üëà Mostrar loader
        await new Promise(r => setTimeout(r, 50));

        try {
            const data = {

                num_cot: "",
                mto_priuni: parseFloat(document.getElementById("aseCic").value),
                mto_gassep: parseFloat(document.getElementById("gastoSep").value),
                val_tc: parseFloat(document.getElementById("tipoCambio").value),
                id_afp: parseFloat(document.getElementById("aseAfp").value),
                id_estado: 1,
                asegurado: {
                    id_tipodociden: parseFloat(document.getElementById("aseTipoDoc").value),
                    num_dociden: document.getElementById("aseNumDoc").value,
                    cod_cuspp: document.getElementById("aseCuspp").value,
                    des_nombre: document.getElementById("aseNombres").value,
                    des_segundonombre: "",
                    des_apepaterno: document.getElementById("aseApellidoPat").value,
                    des_apematerno: document.getElementById("aseApellidoMat").value,
                    id_reg: parseFloat(document.getElementById("aseDepartamento").value),
                    id_ivalido: parseFloat(document.getElementById("aseInvalidez").value),
                    fec_nacimiento: document.getElementById("aseFechaNac").value,
                    id_sexo: parseFloat(document.getElementById("aseSexo").value),
                    val_afp: parseFloat(document.getElementById("aseAfp").value),
                    id_prestacion: document.getElementById("asePension").value,
                    fec_dev: document.getElementById("aseFechaDev").value,
                    fec_devsol: document.getElementById("aseFechaDevSol").value
                },
                beneficiarios: beneficiariosData,
                modalidades: modalidadesData,
                reultados: resultadosModalidadData
            };

            const response = await fetch('http://localhost:3000/cotizador/api/guardar', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
            const result = await response.json();

            console.log("‚úÖ Respuesta backend:", calcData);

            // 3Ô∏è‚É£ Mostrar √©xito
            Swal.fire({
                title: "¬°√âxito!",
                text: "Cotizaci√≥n calculada correctamente",
                icon: "success",
                confirmButtonText: "Aceptar",
                confirmButtonColor: "#3085d6"
            });
        } catch (err) {
            console.error("‚ùå Error:", err.message);

            Swal.fire({
                title: "Error",
                text: err.message,
                icon: "error",
                confirmButtonText: "Cerrar",
                confirmButtonColor: "#d33"
            });
        } finally {
            loader.style.display = "none"; // üëà Ocultar loader siempre
        }
        //alert(result.message);
    }
</script>

<!--  async function calcularCotizacion() {
        const loader = document.getElementById("loader");
        loader.style.display = "block"; // üëà Mostrar loader
        await new Promise(r => setTimeout(r, 50));
        // --- Datos del asegurado (ejemplo: tomados de inputs) ---
        const asegurado = {
            IdBeneficiario: 1,
            TipoInvalidez: parseFloat(document.getElementById("aseInvalidez").value),
            FechaNacimiento: document.getElementById("aseFechaNac").value,
            Genero: parseFloat(document.getElementById("aseSexo").value),
            ComisionAFP: 0,
            TipoPension: document.getElementById("asePension").value,
            FechaDevengue: document.getElementById("aseFechaDev").value,
            FechaDevengueSolicitud: document.getElementById("aseFechaDevSol").value
        };

        // --- Datos generales ---
        const payload = {
            IdoperacionSbs: 0,
            Cliente: "01",
            TipoCambio: parseFloat(document.getElementById("tipoCambio").value || 0),
            GastoSepelio: parseFloat(document.getElementById("gastoSep").value || 0),
            MontoCIC: parseFloat(document.getElementById("aseCic").value || 0),
            Licencia: "",
            Gastos: {
                Gastosmant: parseFloat(document.getElementById("GasAdm").value || 0),
                Gastosemi: parseFloat(document.getElementById("GasEmi").value || 0),
                Porcentajedeuda: 0,
                Impuestos: parseFloat(document.getElementById("GasImp").value || 0)
            },
            Asegurado: asegurado,
            Beneficiario: beneficiarios, // tu array construido en el paso 2
            Modalidad: modalidades       // tu array construido en el paso 3
        };

        console.log("üì§ Enviando JSON:", payload);

        try {
            fetch("http://localhost:3000/auth/token", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ clientId: "cliente1", clientSecret: "secret123" })
            })
                .then(res => res.json())
                .then(data => {
                    const token = data.token;

                    // 2. Usar el token en calcula simulador
                    return fetch("http://localhost:3000/rutinarv/calcular", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "Authorization": `Bearer ${token}`
                        },
                        body: JSON.stringify(payload)
                    })
                        .then(async res => {
                            const data = await res.json();

                            // ‚ö†Ô∏è Si el backend devolvi√≥ error, mostramos SweetAlert
                            if (!res.ok) {
                                throw new Error(data.error || "Ocurri√≥ un error al procesar la solicitud");
                            }

                            return data; // contin√∫a al siguiente .then()
                        })
                        //.then(res => res.json())
                        .then(resultadoFinal => {
                            console.log("‚úÖ Respuesta backend:", resultadoFinal);
                            //alert("Cotizaci√≥n calculada correctamente");
                            // üëá Reemplazamos el alert por un modal visual
                            Swal.fire({
                                title: "¬°√âxito!",
                                text: "Cotizaci√≥n calculada correctamente",
                                icon: "success",
                                confirmButtonText: "Aceptar",
                                confirmButtonColor: "#3085d6"
                            });

                            const tbody = document.querySelector("#tablaResultados tbody");
                            tbody.innerHTML = ""; // Limpiamos tabla previa

                            // Iteramos sobre cada item del array
                            resultadoFinal.forEach(item => {
                                const fila = document.createElement("tr");

                                // Validamos resultadospen
                                const resultadosPenHTML = Array.isArray(item.resultadospen)
                                    ? item.resultadospen.map(rp => `
                <tr>
                    <td>${rp.id}</td>
                    <td>${rp.prc}</td>
                    <td>${rp.pension}</td>
                </tr>
            `).join("")
                                    : `<tr><td colspan="3">No hay datos</td></tr>`;

                                fila.innerHTML = `
            <td>${item.idmod ?? ""}</td>
            <td>${item.penref ?? ""}</td>
            <td>${item.penafp ?? ""}</td>
            <td>${item.pencia ?? ""}</td>
            <td>${item.primaafp ?? ""}</td>
            <td>${item.primacia ?? ""}</td>
            <td>${item.tasavta ?? ""}</td>
            <td>${item.tasaTci ?? ""}</td>
            <td>${item.tasaTce ?? ""}</td>
            <td>${item.tasaTir ?? ""}</td>
            <td>${item.perdida ?? ""}</td>
            <td>
                <table class="table table-sm table-borderless mb-0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>%</th>
                            <th>Pensi√≥n</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${resultadosPenHTML}
                    </tbody>
                </table>
            </td>
        `;

                                tbody.appendChild(fila);
                            });
                        })
                })
        } catch (error) {
            console.error("‚ùå Error:", error);
            //alert("Error al enviar la cotizaci√≥n");
            Swal.fire({
                title: "Error",
                text: err.message,
                icon: "error",
                confirmButtonText: "Cerrar",
                confirmButtonColor: "#d33"
            });
        } finally {
            loader.style.display = "none"; // üëà Ocultar loader siempre
        }
    } -->